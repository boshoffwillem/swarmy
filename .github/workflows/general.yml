# The name of your workflow. GitHub displays the names of your workflows on your repository's "Actions" tab
name: Rust

# To automatically trigger the workflow
on:
  # NB: this differs from the book's project!
  # These settings allow us to run this specific CI pipeline for PRs against
  # this specific branch (a.k.a. book chapter).
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]
    branches:
      - main

env:
  CARGO_TERM_COLOR: always
  SQLX_VERSION: 0.6.2
  SQLX_FEATURES: "rustls,postgres"

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3

      - name: Install the Rust toolchain
        uses: dtolnay/rust-toolchain@stable

      # A GitHub Action that implements smart caching for rust/cargo projects with sensible defaults.
      - name: Rust Cache Action
        uses: Swatinem/rust-cache@v2

      - name: Run tests
        run: cargo test

  # `fmt` container job
  fmt:
    name: Rustfmt
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt

      - name: Rust Cache Action
        uses: Swatinem/rust-cache@v2

      - name: Enforce formatting
        run: cargo fmt --check

  # `clippy` container job
  clippy:
    name: Clippy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: dtolnay/rust-toolchain@stable
        with:
          components: clippy

      - name: Rust Cache Action
        uses: Swatinem/rust-cache@v2

      - name: Linting
        run: cargo clippy -- -D warnings

  # `coverage` container job
  coverage:
    name: Code coverage
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - uses: dtolnay/rust-toolchain@stable

      - name: Rust Cache Action
        uses: Swatinem/rust-cache@v2

      - name: Generate code coverage
        run: cargo install cargo-tarpaulin && cargo tarpaulin --verbose --workspace
